/* 1. Use a more-intuitive box-sizing model */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* 2. Remove default margin */
* {
    margin: 0;
}

body {
    /* 3. Add accessible line-height */
    line-height: 1.5;
    /* 4. Improve text rendering */
    -webkit-font-smoothing: antialiased;
}

/* 5. Improve media defaults */
img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

/* 6. Inherit fonts for form controls */
input,
button,
textarea,
select {
    font: inherit;
}

/* 7. Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
    overflow-wrap: break-word;
}

/* 8. Improve line wrapping */
p {
    text-wrap: pretty;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    text-wrap: balance;
}

/*
    9. Create a root stacking context
  */
#root,
#__next {
    isolation: isolate;
}

:root {
    --input-radius: 10px;
    --first-switcher-radius: 10px 0 0 10px;
    --second-switcher-radius: 0 10px 10px 0;
    --cell-size: 100px;
    --gradient: linear-gradient(
        45deg,
        #743fc9,
        #da45ad,
        #fa3b68,
        #be2974,
        #ff50d9,
        #ab4bec
    );
    --neon: hsl(317 100% 54%);
  --neon-bg: hsl(323 21% 16%);
}

html,
body {
    width: 100vw;
    height: 100vh;
    overflow: hidden;
}

/* Add animation bg */
@keyframes move {
    100% {
        transform: translate3d(0, 0, 1px) rotate(360deg);
    }
}

body {
    position: fixed;
    top: 0;
    left: 0;
    background: #451386;
}

body span {
    width: 25vmin;
    height: 25vmin;
    border-radius: 25vmin;
    backface-visibility: hidden;
    position: absolute;
    z-index: -100;
    animation: move;
    animation-duration: 38;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
}


body span:nth-child(0) {
    color: #ea0ba3;
    top: 18%;
    left: 96%;
    animation-duration: 6s;
    animation-delay: -90s;
    transform-origin: 4vw -9vh;
    box-shadow: -50vmin 0 6.532070826031335vmin currentColor;
}
body span:nth-child(1) {
    color: #ea0ba3;
    top: 43%;
    left: 65%;
    animation-duration: 64s;
    animation-delay: -120s;
    transform-origin: -10vw -12vh;
    box-shadow: 50vmin 0 6.7533817932566205vmin currentColor;
}
body span:nth-child(2) {
    color: #ea0ba3;
    top: 5%;
    left: 75%;
    animation-duration: 21s;
    animation-delay: -31s;
    transform-origin: 5vw 23vh;
    box-shadow: 50vmin 0 6.688406715249455vmin currentColor;
}
body span:nth-child(3) {
    color: #b11bda;
    top: 57%;
    left: 38%;
    animation-duration: 100s;
    animation-delay: -21s;
    transform-origin: 6vw 3vh;
    box-shadow: -50vmin 0 6.76920623556391vmin currentColor;
}
body span:nth-child(4) {
    color: #b11bda;
    top: 50%;
    left: 34%;
    animation-duration: 12s;
    animation-delay: -117s;
    transform-origin: -14vw 20vh;
    box-shadow: 50vmin 0 6.973132304741671vmin currentColor;
}
body span:nth-child(5) {
    color: #b11bda;
    top: 71%;
    left: 4%;
    animation-duration: 110s;
    animation-delay: -113s;
    transform-origin: 0vw 19vh;
    box-shadow: 50vmin 0 7.054623999169697vmin currentColor;
}
body span:nth-child(6) {
    color: #b11bda;
    top: 56%;
    left: 76%;
    animation-duration: 14s;
    animation-delay: -58s;
    transform-origin: 18vw -6vh;
    box-shadow: 50vmin 0 6.9406724219717875vmin currentColor;
}
body span:nth-child(7) {
    color: #ea0ba3;
    top: 68%;
    left: 30%;
    animation-duration: 91s;
    animation-delay: -4s;
    transform-origin: -19vw -2vh;
    box-shadow: 50vmin 0 6.584423449730336vmin currentColor;
}
body span:nth-child(8) {
    color: #8599ff;
    top: 53%;
    left: 95%;
    animation-duration: 43s;
    animation-delay: -2s;
    transform-origin: -1vw 25vh;
    box-shadow: -50vmin 0 6.31886835199695vmin currentColor;
}
body span:nth-child(9) {
    color: #8599ff;
    top: 27%;
    left: 63%;
    animation-duration: 113s;
    animation-delay: -13s;
    transform-origin: 7vw 1vh;
    box-shadow: -50vmin 0 6.660755331508169vmin currentColor;
}
body span:nth-child(10) {
    color: #b11bda;
    top: 9%;
    left: 11%;
    animation-duration: 38s;
    animation-delay: -85s;
    transform-origin: -4vw 19vh;
    box-shadow: -50vmin 0 7.001073753230642vmin currentColor;
}
body span:nth-child(11) {
    color: #b11bda;
    top: 77%;
    left: 21%;
    animation-duration: 17s;
    animation-delay: -82s;
    transform-origin: 18vw -11vh;
    box-shadow: 50vmin 0 6.653043507219637vmin currentColor;
}
body span:nth-child(12) {
    color: #8599ff;
    top: 82%;
    left: 74%;
    animation-duration: 102s;
    animation-delay: -13s;
    transform-origin: 6vw 2vh;
    box-shadow: -50vmin 0 6.762883734421609vmin currentColor;
}


/* 
Make radio-group behave like switcher 
*/

.switcher {
    border-radius: var(--input-radius);
    border: none;
    display: flex;
    overflow: hidden;
}

.switcher input {
    position: absolute;
    clip-path: rect(0, 0, 0, 0);
    /* Hide radio button */
    height: 0px;
    width: 0px;
    border: 0;
    overflow: hidden;
}

.switcher label {
    background-color: #fbb9fe;
    color: rgba(0, 0, 0, 0.67);
    font-size: 14px;
    /* change in root and colors too */
    font-weight: bold;
    line-height: 1;
    text-align: center;
    padding: 8px 16px;
    margin-right: -1px;
    border: 1px solid rgba(0, 0, 0, 0.2);
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.177), 0 1px rgba(255, 255, 255, 0.105);
    transition: all 0.2s ease-in-out;
}

.switcher label:hover {
    cursor: pointer;
}

.switcher input:checked+label {
    background-color: #6a33bc;
    color: #fbb9fe;
    box-shadow: none;
}

.switcher label:first-of-type {
    border-radius: var(--first-switcher-radius);
}

.switcher label:last-of-type {
    border-radius: var(--second-switcher-radius);
}

/* Add nice inputs with animation */
.player-input {
    position: relative;
    margin-bottom: 10px;
}

.input-field {
    width: 100%;
    border: 0;
    border-bottom: 2px solid rgb(119, 117, 117);
    outline: 0;
    font-size: 1.15rem;
    color: white;
    padding: 7px 0;
    background: transparent;
    transition: border-color 0.2s;
}

.input-field::placeholder {
    color: transparent;
}

.input-label {
    position: absolute;
    top: 0;
    display: block;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    padding-left: 10px;
    transition: 400ms all;
    font-size: 1rem;
    color: #9b9b9b;
}

.input-field:focus {
    padding-bottom: 6px;
    font-weight: 700;
    border-width: 3px;
    border-image: linear-gradient(to right, #ff8797, #ff0cba); /* Поменяц на цвета из root*/
    border-image-slice: 1;
}

.input-field:focus ~ .input-label,
.input-field:valid ~ .input-label,
.input-field:not(:placeholder-shown) ~ .input-label {
  transform: translate(-11.7%, -50%) scale(0.8);
}

/*  ----------------------------------------    */

/* Add nice button */
.play-btn {
    display: flex;
    width: 100%; 
    justify-content: center;
    align-items: center;
    margin-top: 10px;
}


.neon-button {
    font-size: 2rem;
  
    display: inline-block;
    cursor: pointer;
    text-decoration: none;
    color: var(--neon);
    background-color:  transparent;
    border: var(--neon) 0.125em solid;
    padding: 0.25em 1em;
    border-radius: 1em;
  
    text-shadow: 0 0 0.125em hsl(0 0% 100% / 0.3), 0 0 0.45em currentColor;
  
    box-shadow: inset 0 0 0.5em 0 var(--neon), 0 0 0.5em 0 var(--neon);
  
    position: relative;
  }
  
  .neon-button::before {
    pointer-events: none;
    content: "";
    position: absolute;
    background: var(--neon);
    top: 120%;
    left: 0;
    width: 100%;
    height: 100%;
  
    transform: perspective(1em) rotateX(40deg) scale(1, 0.35);
    filter: blur(2em);
    opacity: 0.7;
  }
  
  .neon-button::after {
    content: "";
    position: absolute;
    border-radius: 1em;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    box-shadow: 0 0 2em 0.5em var(--neon);
    opacity: 0;
    background-color: var(--neon);
    z-index: -1;
    transition: opacity 100ms linear;
  }

  .neon-button:active {
    transform: scale(0.8);
    color:  #451386;
    background-color: var(--neon);
  }

  .neon-button:active::before {
    opacity: 0;
  }
  
  .neon-button:hover {
    color:  #451386;
    background-color: var(--neon);
    text-shadow: none;
  }
  
  .neon-button:hover::before {
    opacity: 1;
  }
  .neon-button:hover::after {
    opacity: 1;
  }

  .neon-button:active:hover::before {
    opacity: 0;
  }

/* ----------------------------------------------------*/

main {
    pointer-events: none;
}

.options {
    display: flex;
    justify-content: space-between;
}

/* Like card */
.game-options {
    padding: 10px 0;
    background-color: #5e386068;
    border-radius: var(--input-radius);
    display: flex;
    flex-direction: column;
    align-items: center;
}

.switcher {
    padding-bottom: 4px;
}

/* Like card */
.player-options {
    padding: 10px 10px;
    background-color: #5e386068;
    border-radius: var(--input-radius);
    width: 40%;
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.btn {
    outline: 1px solid black;
    text-align: center;
}



.play-screen,
.computer-input {
    display: none;
}

#field-wrapper > * {
    outline: 1px solid black;
    min-height: 50px;
    text-align: center;
    color: transparent;
}
/*
.cell {
    width: var(--cell-size);
    height: var(--cell-size);
}*/

#field-wrapper {
    display: grid;
    grid-template-columns: repeat(var(--field-size), 1fr);
    grid-template-rows: repeat(var(--field-size), 1fr);
}